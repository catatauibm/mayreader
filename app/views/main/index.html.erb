<div id="main">
	<br />
	<br />
	<br />
	<br />
	<% @feeds.each do |feed| %>
		<% feed.entries.first(10).each_with_index do |entry, i| %>
		<article>
			<h1 class="feed-title"><a href="<%= entry.url %>"><%= i.to_s + ". " + entry.title %></a></h1>
			<h2 class="feed-subtitle"><%= feed.title + " - " + entry.author %></h2>
			<br />
			<div class="feed-description">
				<% if entry.content == nil %>
				<%= entry.summary.to_s.html_safe %>
				<% 	else %>
				<%= entry.content.to_s.html_safe %>
				<% end %>
			</div>
			<br />
			<br />
			<div><%= entry.summary.to_s %></div>
			<br />
			<div><%= entry.methods %></div>
			<br />
			
			
		</article>
		<% end %>
		<br />
		<br />
		<br />
	<% end %>
</div>

<%= render partial: "menu", locals: { menu: @menu, selected_category: @selected_category, selected_site: @selected_site } %>

<footer>
	[:title, :title=, :url, :url=, :author, :author=, :content, :content=, :summary, :summary=, :image, :image=, :updated, :add_categories, :categories, :categories=, :entry_id, :entry_id=, :published, :parse_datetime, :id, :published=, :updated=, :sanitize!, :last_modified, :each, :[], :[]=, :to_a, :entries, :to_h, :sort, :sort_by, :grep, :count, :find, :detect, :find_index, :find_all, :select, :reject, :collect, :map, :flat_map, :collect_concat, :inject, :reduce, :partition, :group_by, :first, :all?, :any?, :one?, :none?, :min, :max, :minmax, :min_by, :max_by, :minmax_by, :member?, :include?, :each_with_index, :reverse_each, :each_entry, :each_slice, :each_cons, :each_with_object, :zip, :take, :take_while, :drop, :drop_while, :cycle, :chunk, :slice_before, :lazy, :to_set, :as_json, :sum, :index_by, :many?, :exclude?, :parse, :blank?, :present?, :presence, :acts_like?, :duplicable?, :deep_dup, :try, :try!, :in?, :presence_in, :to_param, :to_query, :instance_values, :instance_variable_names, :to_json_with_active_support_encoder, :to_json_without_active_support_encoder, :to_json, :with_options, :html_safe?, :psych_to_yaml, :to_yaml, :to_yaml_properties, :dclone, :`, :require_or_load, :require_dependency, :load_dependency, :load, :require, :unloadable, :nil?, :===, :=~, :!~, :eql?, :hash, :<=>, :class, :singleton_class, :clone, :dup, :taint, :tainted?, :untaint, :untrust, :untrusted?, :trust, :freeze, :frozen?, :to_s, :inspect, :methods, :singleton_methods, :protected_methods, :private_methods, :public_methods, :instance_variables, :instance_variable_get, :instance_variable_set, :instance_variable_defined?, :remove_instance_variable, :instance_of?, :kind_of?, :is_a?, :tap, :send, :public_send, :respond_to?, :extend, :display, :method, :public_method, :singleton_method, :define_singleton_method, :object_id, :to_enum, :enum_for, :gem, :class_eval, :silence_warnings, :enable_warnings, :with_warnings, :silence_stderr, :silence_stream, :suppress, :capture, :silence, :quietly, :debugger, :breakpoint, :suppress_warnings, :==, :equal?, :!, :!=, :instance_eval, :instance_exec, :__send__, :__id__]
</footer>